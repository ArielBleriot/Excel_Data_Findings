# 🌩️ AWS Serverless ETL Pipeline

This project demonstrates how to build a **scalable, serverless ETL pipeline on AWS** to process and analyze weather data efficiently.

---

## 🏗️ Architecture Overview

| Component | Role |
|-----------|------|
| **AWS S3** | Stores **incoming raw JSON files** and processed **Parquet files** |
| **AWS Lambda** | Triggered on new file uploads, **flattens JSON** using pandas, writes **Parquet** back to S3 |
| **AWS Glue** | Catalogs processed data for querying |
| **Amazon Athena** | Enables **SQL-based analytics** on S3-stored data |

---

## 💻 Tech Stack

- **Python**: pandas, boto3, pyarrow  
- **AWS Services**: S3, Lambda, Glue, Athena  

---

## ⚡ Key Features

- Converts **JSON → Parquet** for optimized storage and fast querying  
- Fully **automated pipeline** triggered on file upload  
- Designed with **scalability** and **cost-efficiency** in mind  

---

## 🛠️ What I Learned

- Event-driven data processing using **AWS Lambda**  
- **Schema evolution** and **data partitioning** best practices  
- Handling **Lambda packaging issues** with dependencies  

---

## ⚠️ Challenges Faced

- URL decoding of **S3 object keys** from event payload  
- Configuring **IAM policies** for secure Lambda execution  
- Managing **Lambda execution time and memory** for large datasets  

---

## 📌 Key Takeaways

This project reinforced my skills in **serverless architectures**, **AWS data services**, and **automated ETL pipelines** — foundational knowledge for real-world **Data Engineering** projects.

---

## 📂 Repository

Explore the project code here: [Airflow1_project Repository](https://github.com/ArielBleriot/Excel_Data_Findings/edit/main/Airflow1_project/README.md)

---

Made with ❤️ by **Ariel Bleriot Ndonfak Sapi**
